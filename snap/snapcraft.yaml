name: deviceupdate-agent # you probably want to 'snapcraft register <name>'
base: core20 # the base snap is the execution environment for this snap
license: MIT
version: '0.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: IoT Hub Device Update Agent for Ubuntu Core # 79 char long summary
description: |
  The IoT Hub Device Update Agent snap for Ubuntu Core.

  How To Configure The Agent
  ==========================
    This snap provides a command called "set-config" that takes configuration file name and base64-encoded binary data as input and saves the decoded data to the $SNAP_DATA/config folder.

    Example usage:
      sudo deviceupdate-agent.set-config --config-file du-config.json -d "$(base64 /path/to/your/du-config.json)"

    For more information:
      deviceupdate-agent.set-config --help


grade: devel
confinement: strict

# Use passthrough for the moment, until the appropriate snapcraft release lands
# system-usernames:
#   snap_aziotedge: shared
passthrough:
  system-usernames:
    snap_aziotdu: shared

#####
#
# Keywords
#
# after  - Specifies part's dependencies.
#              See https://snapcraft.io/docs/parts-lifecycle#heading--step-dependencies
#                  https://snapcraft.io/docs/parts-lifecycle
# plugin - Specifies a plugin required for building the part.
#
# see also:
#     environment variables - https://snapcraft.io/docs/parts-environment-variables
#
#####

parts:
  installdeps:
    plugin: nil
    source: ./scripts
    override-build: |
      ./install-deps.sh --install-cmake --work-folder $SNAPCRAFT_STAGE/du-workfolder  --install-shellcheck --install-catch2
    build-packages:
      - wget
    stage-packages:
      - libboost-filesystem1.71.0

  azure-iot-hub-client-csdk:
    after:
      - installdeps
    source: https://github.com/Azure/azure-iot-sdk-c.git
    source-type: git
    source-tag: LTS_07_2021_Ref01
    plugin: cmake
    source-depth: 1
    build-packages:
      - libcurl4-openssl-dev
      - libssl-dev
      - uuid-dev
    override-build: |
      cd $SNAPCRAFT_PART_SRC
      git submodule update --init
      mkdir -p $SNAPCRAFT_PART_SRC/cmake
      pushd $SNAPCRAFT_PART_SRC/cmake
      cmake -Duse_amqp:BOOL=OFF -Duse_http:BOOL=ON -Duse_mqtt:BOOL=ON -Duse_wsio:BOOL=ON -Dskip_samples:BOOL=ON -Dbuild_service_client:BOOL=OFF -Dbuild_provisioning_service_client:BOOL=OFF -DCMAKE_BUILD_TYPE:STRING=Debug -Dskip_samples:BOOL=ON ..
      cmake --build .
      cmake --build . --target install

  azure-blob-stroage-file-upload-utility:
    after:
      - azure-iot-hub-client-csdk
    plugin: nil
    source: ./scripts
    build-packages:
      - git
    override-build: |
      ./install-deps.sh --work-folder $SNAPCRAFT_STAGE/du-workfolder --install-abs-file-upload-utility 6969d0fc9d222a5c132d0b8fb4305697a6017383

  deliveryoptimization-sdk:
    after:
      - installdeps
    plugin: nil
    source: ./scripts
    override-build: |
      ./install-deps.sh --install-do --do-ref develop --do-cmake-option "-DDO_BUILD_FOR_SNAP=1"  --work-folder $SNAPCRAFT_STAGE/du-workfolder
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib
      cp /usr/local/lib/libdeliveryoptimization.so* $SNAPCRAFT_PART_INSTALL/usr/lib

  #
  # Agent component
  # This is the main agent application.
  #
  du-agent:
    plugin: nil
    source: .
    override-build: |
      ./scripts/install-deps.sh --work-folder /tmp --install-cmake
      ./scripts/build.sh --work-folder /tmp --ubuntu-core-snap-only
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/bin
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib/adu
      mkdir -p $SNAPCRAFT_PART_INSTALL/var/lib/adu/extensions/sources
      mkdir -p $SNAPCRAFT_PART_INSTALL/conf
      cp $SNAPCRAFT_PART_BUILD/out/bin/AducIotAgent $SNAPCRAFT_PART_INSTALL/usr/bin/AducIotAgent
      cp $SNAPCRAFT_PART_BUILD/out/bin/adu-shell $SNAPCRAFT_PART_INSTALL/usr/lib/adu
      chmod u=rxs $SNAPCRAFT_PART_INSTALL/usr/lib/adu/adu-shell
      cp $SNAPCRAFT_PART_BUILD/out/lib/*.so $SNAPCRAFT_PART_INSTALL/var/lib/adu/extensions/sources

    # Require install-deps
    after:
     - installdeps
     - azure-iot-hub-client-csdk
     - deliveryoptimization-sdk
     - azure-blob-stroage-file-upload-utility

    stage:
      - usr/bin/*
      - usr/lib/*
      - usr/lib/adu/*
      - var/lib/adu/extensions/sources/*.so
      - conf/*.*

    stage-packages:
      - curl
      - libasn1-8-heimdal
      - libboost-filesystem1.71.0
      - libbrotli1
      - libcurl4
      - libgssapi3-heimdal
      - libhcrypto4-heimdal
      - libheimbase1-heimdal
      - libheimntlm0-heimdal
      - libhx509-5-heimdal
      - libicu66
      - libkrb5-26-heimdal
      - libldap-2.4-2
      - libnghttp2-14
      - libpsl5
      - libroken18-heimdal
      - librtmp1
      - libsasl2-2
      - libssh-4
      - libwind0-heimdal
      - libxml2

  du-agent-commands:
    source: .
    plugin: nil
    override-build: |
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/bin/adu
      cp snap-commands/*.* $SNAPCRAFT_PART_INSTALL/usr/bin/adu
    stage:
      - usr/bin/adu/*

  # Install the "jq" package
  jq:
    plugin: nil
    stage-packages:
      - jq

apps:
  # 'deviceupdate-agent' service
  # See document: https://forum.snapcraft.io/t/snapcraft-app-and-service-metadata/8335
  deviceupdate-agent:
    command: usr/bin/AducIotAgent -l 0 -e
    daemon: simple
    refresh-mode: restart
    restart-condition: on-failure
    restart-delay: 10s
    plugs:
      - home
      - network
      - snapd-control
      - account-control
      - hardware-observe

  set-config:
    command: usr/bin/adu/set-config.sh
    plugs:
      - home

plugs:
  do-port-numbers:
    interface: content
    content: do-port-numbers
    target: $SNAP_DATA/do-port-numbers
    allow-auto-connection: true

  do-configs:
    interface: content
    content: do-configs
    target: $SNAP_DATA/do-configs
    allow-auto-connection: true

  snapd-control:
    interface: snapd-control
    allow-auto-connection: true

  identity-service:
    interface: content
    content: aziot-identity-service
    target: $SNAP_DATA
    allow-auto-connection: true

  account-control:
    interface: account-control
    allow-auto-connection: true

  home:
    interface: home

# Provides resources to be accssed by other snaps.
slots:
  #
  # A downloads folder.
  #
  # Consumer(s):
  #
  #    Delivery Optimization : writes downloaded file to this folder and/or sub-folders.
  #
  downloads-folder:
    interface: content
    content: downloads-folder
    write:
        - $SNAP_DATA/data/downloads

environment:
 LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET"

layout:
# adu_data_dir
  /var/lib/adu:
    symlink: $SNAP_DATA/data

  /var/lib/deviceupdate-agent-downloads:
    symlink: $SNAP_DATA/data/downloads

# adu_conf_dir
  /etc/adu:
    symlink: $SNAP_DATA/config
# adu_shell_dir
  /usr/lib/adu:
    symlink: $SNAP/usr/lib/adu
# adu_log_dir
  /var/log/adu:
    symlink: $SNAP_DATA/log
# curl command
  /usr/bin/curl-downloader:
    symlink: $SNAP/usr/bin/curl
# aziot config
  /etc/aziot:
    symlink: $SNAP_DATA/shared/config/aziot
# aziot sockets
  /var/sockets/aziot:
    symlink: $SNAP_DATA/shared/sockets/aziot
