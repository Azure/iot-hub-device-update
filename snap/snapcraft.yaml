name: deviceupdate-agent
base: core20
version: '0.1'
summary: My Snap Summary
description: My Snap Description

parts:
  installdeps:
    plugin: nil
    source: ./scripts
    override-build: |
      ./install-deps.sh --install-cmake --work-folder $SNAPCRAFT_STAGE/du-workfolder  --install-shellcheck --install-catch2
    build-packages:
      - wget
    stage-packages:
      - libboost-filesystem1.71.0

  azure-iot-hub-client-csdk:
    after:
      - installdeps
    source: https://github.com/Azure/azure-iot-sdk-c.git
    source-type: git
    source-tag: LTS_07_2021_Ref01
    plugin: cmake
    source-depth: 1
    build-packages:
      - libcurl4-openssl-dev
      - libssl-dev
      - uuid-dev
    override-build: |
      cd $SNAPCRAFT_PART_SRC
      git submodule update --init
      mkdir -p $SNAPCRAFT_PART_SRC/cmake
      pushd $SNAPCRAFT_PART_SRC/cmake
      cmake -Duse_amqp:BOOL=OFF -Duse_http:BOOL=ON -Duse_mqtt:BOOL=ON -Duse_wsio:BOOL=ON -Dskip_samples:BOOL=ON -Dbuild_service_client:BOOL=OFF -Dbuild_provisioning_service_client:BOOL=OFF -DCMAKE_BUILD_TYPE:STRING=Debug -Dskip_samples:BOOL=ON ..
      cmake --build .
      cmake --build . --target install

  azure-blob-stroage-file-upload-utility:
    after:
      - installdeps
    plugin: nil
    source: ./scripts
    build-packages:
      - git
    override-build: |
      ./install-deps.sh --work-folder $SNAPCRAFT_STAGE/du-workfolder --install-abs-file-upload-utility

  deliveryoptimization-sdk:
    after:
      - installdeps
    plugin: nil
    source: ./scripts
    override-build: |
      ./install-deps.sh --install-do --work-folder $SNAPCRAFT_STAGE/du-workfolder
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib
      cp /usr/local/lib/libdeliveryoptimization.so* $SNAPCRAFT_PART_INSTALL/usr/lib

  #
  # Agent component
  # This is the main agent application.
  #
  du-agent:
    plugin: nil
    source: .
    override-build: |
      ./scripts/install-deps.sh --work-folder /tmp --install-cmake
      ./scripts/build.sh --work-folder /tmp --ubuntu-core-snap-only
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/bin
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib/adu
      mkdir -p $SNAPCRAFT_PART_INSTALL/var/lib/adu/extensions/sources
      mkdir -p $SNAPCRAFT_PART_INSTALL/conf
      cp $SNAPCRAFT_PART_BUILD/out/bin/AducIotAgent $SNAPCRAFT_PART_INSTALL/usr/bin/AducIotAgent
      cp $SNAPCRAFT_PART_BUILD/out/bin/adu-shell $SNAPCRAFT_PART_INSTALL/usr/lib/adu
      chmod u=rxs $SNAPCRAFT_PART_INSTALL/usr/lib/adu/adu-shell
      cp $SNAPCRAFT_PART_BUILD/out/lib/*.so $SNAPCRAFT_PART_INSTALL/var/lib/adu/extensions/sources

    # Require install-deps
    after:
     - installdeps
     - azure-iot-hub-client-csdk
     - deliveryoptimization-sdk
     - azure-blob-stroage-file-upload-utility

    stage:
      - usr/bin/*
      - usr/lib/*
      - usr/lib/adu/*
      - var/lib/adu/extensions/sources/*.so
      - conf/*.*
    stage-packages:
      - curl
      - libasn1-8-heimdal
      - libboost-filesystem1.71.0
      - libbrotli1
      - libcurl4
      - libgssapi3-heimdal
      - libhcrypto4-heimdal
      - libheimbase1-heimdal
      - libheimntlm0-heimdal
      - libhx509-5-heimdal
      - libicu66
      - libkrb5-26-heimdal
      - libldap-2.4-2
      - libnghttp2-14
      - libpsl5
      - libroken18-heimdal
      - librtmp1
      - libsasl2-2
      - libssh-4
      - libwind0-heimdal
      - libxml2

apps:
  # high-privilege tasks broker
  adu-shell:
    command: usr/lib/adu/adu-shell
    plugs:
      - home
      - network

  # 'deviceupdate-agent' service
  # See document: https://forum.snapcraft.io/t/snapcraft-app-and-service-metadata/8335
  deviceupdate-agent:
    command: usr/bin/AducIotAgent -l 0 -e
    daemon: simple
    refresh-mode: restart
    restart-condition: on-failure
    restart-delay: 10s
    plugs:
        - content
        - home
        - network
# Provides resources to be accssed by other snaps.
slots:
  #
  # A downloads folder.
  #
  # Consumer(s):
  #
  #    Delivery Optimization : writes downloaded file to this folder and/or sub-folders.
  #
  downloads:
    interface: content
    content: writeable-data
    write:
        - $SNAP_DATA

plugs:
  do-port-number:
    interface: content
    content: writeable-data
    target: $SNAP_DATA

  do-config-file:
    interface: content
    content: config-file
    target: $SNAP_DATA

#   network:
#     interface: network

#   home:
#     interface: content
#     target: $SNAP_DATA/data/downloads

environment:
  LD_LIBRARY_PATH: "$LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET"

layout:
# adu_data_dir
  /var/lib/adu:
    symlink: $SNAP_DATA/data

# adu_conf_dir
  /etc/adu:
    symlink: $SNAP_DATA/config
# adu_shell_dir
  /usr/lib/adu:
    symlink: $SNAP/usr/lib/adu
# adu_log_dir
  /var/log/adu:
    symlink: $SNAP_DATA/log
# curl command
  /usr/bin/curl-downloader:
    symlink: $SNAP/usr/bin/curl
